{"version":3,"sources":["actions/Game.js","reducers/game.js","reducers/index.js","store.js","containers/Home/index.js","containers/Player/index.js","components/Calculator/index.js","containers/Game/index.js","hooks/usePrevious.js","components/Title/index.js","App.js","serviceWorker.js","index.js"],"names":["fetchGame","name","type","payload","resetGame","id","INITIAL_STATE","games","currentPlayer","players","score","game","undefined","err","startGame","rootReducer","combineReducers","state","action","length","find","g","error","gamesList","gameIdx","findIndex","x","push","updatedList","filter","player","index","current","enhancers","applyMiddleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","reducers","socket","openSocket","connect","createGame","cb","dispatch","setTimeout","history","useHistory","useState","newName","setNewName","className","value","onChange","e","target","onClick","emit","style","color","width","map","i","key","to","isCurrentPlayer","Calculator","setScore","number","setNumber","lastRemoved","toString","slice","parsedBack","parseInt","Array","user","newNumber","numberInteger","addNumber","compose","withRouter","updatePlayerScore","match","prevName","ref","useRef","useEffect","usePrevious","params","finishGame","newScore","handleScoreUpdate","Title","App","exact","path","Game","React","Component","Boolean","location","hostname","io","on","message","alert","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7ba9c0ed.chunk.js","sourcesContent":["export const FETCH_GAME = \"FETCH_GAME\";\nexport const FETCH_GAMES = \"FETCH_GAMES\";\nexport const CREATE_GAME = \"CREATE_GAME\";\nexport const DELETE_GAME = \"DELETE_GAME\";\nexport const RESET_GAME = \"RESET_GAME\";\n\nexport const UPDATE_PLAYER_SCORE = \"UPDATE_PLAYER_SCORE\";\n\nexport const fetchGame = name => ({\n  type: FETCH_GAME,\n  payload: name\n});\n\nexport const fetchGames = () => ({\n  type: FETCH_GAMES,\n});\n\nexport const createGame = (name, cb) => dispatch => {\n  dispatch({\n    type: CREATE_GAME,\n    payload: name\n  });\n  cb && setTimeout(() => cb(), 1000)\n};\n\n\nexport const deleteGame = id => ({\n  type: DELETE_GAME,\n  payload: id\n});\n\nexport const resetGame = id => ({\n  type: RESET_GAME,\n  payload: id\n});\n\n\nexport const updatePlayerScore = (player, index) => ({\n  type: UPDATE_PLAYER_SCORE,\n  payload: {player, index}\n})\n","import {\n  FETCH_GAME, CREATE_GAME, DELETE_GAME, RESET_GAME,\n  UPDATE_PLAYER_SCORE\n} from \"../actions/Game\";\n\nconst INITIAL_STATE = {\n  games: [\n    {\n      name: 'league',\n      currentPlayer: 0,\n      players: [\n        {name: 'Player 1', score: 501},\n        {name: 'Player 2', score: 501},\n      ]\n    }\n  ],\n  game: undefined,\n  err: undefined,\n};\n\nconst startGame = {\n  currentPlayer: 0,\n  players: [\n    {name: 'Player 1', score: 501},\n    {name: 'Player 2', score: 501},\n  ]\n}\n\nexport default function(state = INITIAL_STATE, action) {\n\n  switch (action.type) {\n    case FETCH_GAME:\n      let game, err\n      const games = state.games\n\n      if (games && games.length) {\n        game = games.find(g => g.name === action.payload)\n        if (!game) {\n          err = 'Er is geen spel met deze naam gevonden'\n        } else {\n          err = undefined\n        }\n      } else {\n        err = 'Geen spellen gevonden'\n      }\n       return {\n         ...state,\n         game,\n         err\n       };\n\n     case CREATE_GAME:\n      let error\n      const name = action.payload\n      const gamesList = [...state.games]\n      const gameIdx = gamesList.findIndex(x => x.name === name)\n      if (gameIdx === -1) {\n        gamesList.push({\n          name,\n          ...startGame\n        })\n        error = undefined\n      } else {\n        error = 'Deze naam bestaat al'\n      }\n\n       return {\n         ...state,\n         games: gamesList,\n         err: error\n       };\n\n     case DELETE_GAME:\n       const updatedList = state.games.filter(x => x.name !== action.payload.id)\n       return {\n         ...state,\n         games: updatedList,\n       };\n\n      case RESET_GAME:\n\n        return {\n          ...state,\n        }\n\n      case UPDATE_PLAYER_SCORE:\n        const { player, index } = action.payload\n        let current = state.game.currentPlayer\n        const players = [...state.game.players]\n        players[index] = player\n        if (current === 1) {\n          current = 0\n        } else {\n          current = 1\n        }\n        return {\n          ...state,\n          game: {\n            ...state.game,\n            players,\n            currentPlayer: current\n          }\n        }\n\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport gameReducer from './game';\n\n\nconst rootReducer= combineReducers({\n  game: gameReducer,\n});\n\nexport default rootReducer;\n","import {\n  applyMiddleware,\n  createStore,\n} from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\n\n\nconst enhancers = [applyMiddleware(thunk)];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n\n\nexport const store = createStore(\n  reducers,\n  {},\n  composeEnhancers(...enhancers)\n);\n","import React, { useState } from 'react'\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport openSocket from 'socket.io-client';\n\nimport { createGame } from '../../actions/Game'\n\nimport './styles.scss'\nconst  socket = openSocket('http://localhost:8080');\n\nexport const Home = ({ games, createGame }) => {\n  let history = useHistory();\n  const [newName, setNewName] = useState('')\n\n  const handleCreateGame = () => {\n    socket.emit('create game', 'newName');\n    createGame(newName, () =>\n      history.push(`/game/${newName}`)\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"col-5\" />\n      <div className=\"col-2 new-game padded-v--lg\">\n        <div>\n          Maak een nieuwe game\n          <input\n            type=\"text\"\n            value={newName}\n            onChange={e => setNewName(e.target.value)}\n          />\n          <div\n            className=\"button margin-top block\"\n            onClick={handleCreateGame}\n          >\n            Start\n          </div>\n        </div>\n        <br /><br />\n        <br /><br />\n        <div className=\"existing-game\">\n          Join een bestaande game\n          <hr style={{ color: 'white', width: 'calc(100% - 6px)'}} />\n          <div>\n            {\n              games && games.length > 0\n                ? games.map((game, i) =>\n                    <Link\n                      key={i}\n                      to={`/game/${game.name}`}\n                    >\n                      {game.name}\n                    </Link>\n                  )\n                : 'Er zijn nog geen bestaande games'\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps({ game }) {\n  return {\n    games: game.games\n  };\n}\n\nexport default connect(\n  mapStateToProps, {\n    createGame\n  }\n)(Home)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from \"react-redux\";\n\nimport { fetchGame } from '../../actions/Game'\n\nimport './styles.scss'\n\nexport const Player = ({ isCurrentPlayer, name, score }) => {\n  return (\n    <div className=\"player\">\n      <div>\n        {name}\n        <span className={`player__current ${isCurrentPlayer ? 'player__current--active' : ''}`} />\n      </div>\n      {score}\n    </div>\n  )\n}\n\nfunction mapStateToProps({ game }) {\n  return {\n    game: game.game\n  };\n}\n\nexport default connect(mapStateToProps, {\n    fetchGame\n  })\n(Player);\n","import React, { useState } from 'react'\n\nimport './styles.scss'\n\nconst Calculator = ({ setScore }) => {\n  const [number, setNumber] = useState(0)\n\n  const addNumber = (score) => {\n    const newNumber = `${number}${score}`\n    const numberInteger = parseInt(newNumber, 10)\n    if (numberInteger > 180) return\n    setNumber(numberInteger)\n  }\n\n  const removeNumber = () => {\n    const numberString = number.toString()\n    const lastRemoved = numberString.slice(0, -1)\n    const parsedBack = parseInt(lastRemoved, 10)\n    if (parsedBack && parsedBack >= 0) {\n      setNumber(parsedBack)\n    } else {\n      setNumber(0)\n    }\n  }\n\n  return (\n    <>\n      <div className=\"number-container\">\n        {number}\n        <span\n          className=\"number-container__close\"\n          onClick={removeNumber}\n        >\n          ×\n        </span>\n      </div>\n      <div className=\"calculator\">\n        {\n          [...new Array(10)].map((user, i) =>\n            <div\n              className=\"calculator__key\"\n              onClick={() => addNumber(9 - i)}\n            >\n              {9 - i}\n            </div>\n          )\n        }\n      </div>\n      <div\n        className={`button block`}\n        onClick={() => {setScore(number); setNumber(0)}}\n      >\n        {number > 0 ? 'Set score' : 'No score'}\n      </div>\n    </>\n  )\n}\n\nexport default Calculator\n","import React, { useState, useEffect } from 'react'\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport Player from '../Player'\nimport Calculator from '../../components/Calculator'\n\nimport { usePrevious } from \"../../hooks\";\nimport { fetchGame, updatePlayerScore, resetGame } from '../../actions/Game'\n\nimport './styles.scss'\n\nexport const Home = ({ games, createGame, match, game, fetchGame, updatePlayerScore }) => {\n  const prevName = usePrevious(match.params.name);\n  const name = match.params.name\n\n  useEffect(() => {\n    if (name && (prevName !== name)) {\n      fetchGame(name)\n    }\n  }, [name, prevName, fetchGame])\n\n  const handleScoreUpdate = (score) => {\n    const currentPlayer = game.players[game.currentPlayer]\n    if (!currentPlayer) return\n    const newScore = currentPlayer.score - score\n    if (newScore < 0) return\n    if (newScore === 0) finishGame()\n    currentPlayer.score = newScore\n    updatePlayerScore(currentPlayer, game.currentPlayer)\n  }\n\n  const finishGame = () => {\n    resetGame(name)\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"col-5\" />\n      <div className=\"col-2 new-game padded-v--lg\">\n        {game ? game.name : 'No game found'}\n        <div className=\"game-container container\">\n          {\n            game\n              ?\n                game.players.map((player, i) =>\n                  <div className={`col-${12 / game.players.length}`}>\n                    <Player\n                      name={player.name}\n                      isCurrentPlayer={game.currentPlayer === i}\n                      score={player.score}\n                    />\n                  </div>\n                )\n              : null\n          }\n          <hr className=\"col-12\" style={{ color: 'white', width: 'calc(100% - 6px)'}} />\n          <div className=\"col-12\">\n            <Calculator setScore={(score) => handleScoreUpdate(score)} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps({ game }) {\n  return {\n    game: game.game\n  };\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {\n    fetchGame,\n    updatePlayerScore,\n    resetGame\n  })\n)(Home);\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(\n    value\n){\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef();\n  \n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value;\n  }, [value]); // Only re-run if value changes\n  \n  // Return previous value (happens before update in useEffect above)\n  return ref.current\n\n}","import React from 'react'\nimport './styles.scss'\n\nconst Title = () => (\n  <div className=\"title\">SNOEIEN DARTS</div>\n)\n\nexport default Title\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux'\n\nimport { store } from './store'\nimport Home from './containers/Home';\nimport Game from './containers/Game';\nimport Title from './components/Title';\n\nimport './App.scss';\nimport './theme/master.scss';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <Title />\n        </header>\n        <Provider store={store}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/game/:name\">\n                <Game />\n              </Route>\n            </Switch>\n          </Router>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport io from 'socket.io-client';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst socket = io();\n// sockets test\nsocket.on('hello', ({ message }) => alert(message));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}