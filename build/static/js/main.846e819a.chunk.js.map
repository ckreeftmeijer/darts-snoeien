{"version":3,"sources":["actions/Game.js","reducers/game.js","reducers/index.js","store.js","containers/Home/index.js","containers/Player/index.js","containers/Game/index.js","components/Calculator/index.js","components/Title/index.js","App.js","serviceWorker.js","index.js"],"names":["fetchGame","name","dispatch","type","payload","axios","get","then","data","err","INITIAL_STATE","games","undefined","game","loading","error","rootReducer","combineReducers","state","action","updatedList","filter","x","id","player","index","current","currentPlayer","players","middleware","applyMiddleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","connect","createGame","cb","post","fetchGames","history","useHistory","useState","newName","setNewName","useEffect","className","value","onChange","e","target","onClick","push","style","color","width","length","Array","isArray","map","i","key","to","socket","isCurrentPlayer","score","Calculator","setScore","number","setNumber","lastRemoved","toString","slice","parsedBack","parseInt","user","newNumber","numberInteger","addNumber","Home","props","handleScoreUpdate","newScore","finishGame","updateGameSocket","alert","io","on","res","updateGame","this","match","params","disconnect","React","Component","withRouter","emit","resetGame","Title","App","exact","path","Game","Boolean","location","hostname","message","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.846e819a.chunk.js","sourcesContent":["import axios from \"axios\";\n\n\nexport const DELETE_GAME = \"DELETE_GAME\";\nexport const RESET_GAME = \"RESET_GAME\";\n\nexport const CREATE_GAME = \"CREATE_GAME\";\nexport const CREATE_GAME_SUCCESS = \"CREATE_GAME_SUCCESS\";\nexport const CREATE_GAME_FAILURE = \"CREATE_GAME_FAILURE\";\n\nexport const FETCH_GAME = \"FETCH_GAME\";\nexport const FETCH_GAME_SUCCESS = \"FETCH_GAME_SUCCESS\";\nexport const FETCH_GAME_FAILURE = \"FETCH_GAME_FAILURE\";\n\nexport const FETCH_GAMES = \"FETCH_GAMES\";\nexport const FETCH_GAMES_SUCCESS = \"FETCH_GAMES_SUCCESS\";\nexport const FETCH_GAMES_FAILURE = \"FETCH_GAMES_FAILURE\";\n\nexport const UPDATE_GAME = \"UPDATE_GAME\";\n\nexport const fetchGame = (name) => dispatch => {\n  dispatch({\n    type: FETCH_GAME,\n    payload: name\n  });\n  axios.get(`/api/game/${name}`).then(\n    data => {\n      dispatch({\n        type: FETCH_GAME_SUCCESS,\n        payload: data\n      })\n    },\n    err => dispatch({ type: FETCH_GAME_FAILURE, payload: err })\n  )\n};\n\nexport const fetchGames = (name) => dispatch => {\n  dispatch({\n    type: FETCH_GAMES,\n    payload: name\n  });\n  axios.get(`/api/games`).then(\n    data => {\n      dispatch({\n        type: FETCH_GAMES_SUCCESS,\n        payload: data\n      })\n    },\n    err => dispatch({ type: FETCH_GAMES_FAILURE, payload: err })\n  )\n};\n\nexport const createGame = (name, cb) => dispatch => {\n  dispatch({\n    type: CREATE_GAME,\n    payload: name\n  });\n  axios.post(`/api/game`, { name }).then(\n    data => {\n      dispatch({\n        type: CREATE_GAME_SUCCESS,\n        payload: data\n      })\n      cb && cb(data)\n    },\n    err => dispatch({ type: CREATE_GAME_FAILURE, payload: err })\n  )\n};\n\n\nexport const deleteGame = id => ({\n  type: DELETE_GAME,\n  payload: id\n});\n\nexport const resetGame = id => ({\n  type: RESET_GAME,\n  payload: id\n});\n\nexport const updateGame = (game) => ({\n  type: UPDATE_GAME,\n  payload: game\n})\n\n/***************************************************************************************** */\n/* Async Action items using - Sockets\t\t\t\t\t\t\t\t\t\t\t\t\t   */\n/***************************************************************************************** */\n\nexport const updateGameSocket = (socket, game) => {\n\treturn (dispatch) => {\n\t    socket.emit('updateGame',game)\n\t}\n}\n\nexport const addNewItemSocket = (socket,id,item) => {\n\treturn (dispatch) => {\n\t\tlet postData = {\n\t\t\t\tid:id+1,\n\t\t\t\titem:item,\n\t\t\t\tcompleted:false\n\t\t     }\n\t    socket.emit('addItem',postData)\n\t}\n}\n\nexport const markItemCompleteSocket = (socket,id,completedFlag) => {\n\treturn (dispatch) => {\n\t\tlet postData = {\n\t\t\t\tid:id,\n\t\t\t\tcompleted:completedFlag\n\t\t     }\n\t\tsocket.emit('markItem',postData)\n\t}\n}\n","import {\n  FETCH_GAME, FETCH_GAME_SUCCESS, FETCH_GAME_FAILURE,\n  FETCH_GAMES, FETCH_GAMES_SUCCESS, FETCH_GAMES_FAILURE,\n  DELETE_GAME, RESET_GAME,\n  CREATE_GAME, CREATE_GAME_SUCCESS, CREATE_GAME_FAILURE,\n  UPDATE_GAME\n} from \"../actions/Game\";\n\nconst INITIAL_STATE = {\n  games: undefined,\n  game: undefined,\n  err: undefined,\n  loading: {\n    game: false,\n  },\n  error: {\n    game: false,\n    games: false,\n  }\n};\n\nexport default function(state = INITIAL_STATE, action) {\n\n  switch (action.type) {\n    case FETCH_GAME:\n      return {\n        ...state,\n        loading: {...state.loading, game: true}\n      };\n    case FETCH_GAME_SUCCESS:\n      return {\n        ...state,\n        game: action.payload.data,\n        error: undefined,\n        loading: {...state.loading, game: false}\n      };\n    case FETCH_GAME_FAILURE:\n      return {\n        ...state,\n        game: undefined,\n        error: action.payload,\n        loading: {...state.loading, game: false}\n      };\n\n    case FETCH_GAMES:\n      return {\n        ...state,\n        loading: {...state.loading, games: true}\n      };\n    case FETCH_GAMES_SUCCESS:\n      return {\n        ...state,\n        games: action.payload.data,\n        error: undefined,\n        loading: {...state.loading, games: false}\n      };\n    case FETCH_GAMES_FAILURE:\n      return {\n        ...state,\n        games: undefined,\n        error: action.payload,\n        loading: {...state.loading, games: false}\n      };\n\n\n     case CREATE_GAME:\n       return {\n         ...state,\n         game: undefined,\n         error: undefined\n       };\n     case CREATE_GAME_SUCCESS:\n       return {\n         ...state,\n         game: action.payload.data.game,\n         error: undefined\n       };\n     case CREATE_GAME_FAILURE:\n       return {\n         ...state,\n         game: undefined,\n         error: action.payload\n       };\n\n     case DELETE_GAME:\n       const updatedList = state.games.filter(x => x.name !== action.payload.id)\n       return {\n         ...state,\n         games: updatedList,\n       };\n\n      case RESET_GAME:\n\n        return {\n          ...state,\n        }\n\n      case UPDATE_GAME:\n        const { player, index } = action.payload\n        let current = state.game.currentPlayer\n        const players = [...state.game.players]\n        players[index] = player\n        if (current === 1) {\n          current = 0\n        } else {\n          current = 1\n        }\n        return {\n          ...state,\n          game: action.payload\n        }\n\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\nimport gameReducer from './game';\n\n\nconst rootReducer= combineReducers({\n  game: gameReducer,\n});\n\nexport default rootReducer;\n","import {\n  applyMiddleware,\n  createStore,\n} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { compose } from \"redux\";\n\nimport reducers from \"./reducers\";\n\n\n// const enhancers = [applyMiddleware(thunk)];\n//\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n//\n//\n// export const store = createStore(\n//   reducers,\n//   {},\n//   composeEnhancers(...enhancers)\n// );\n\n\nconst middleware = applyMiddleware(thunk);\n\nconst composeEnhancers =\n\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n\treducers,\n\tcomposeEnhancers(middleware)\n);\n","import React, { useState, useEffect } from 'react'\nimport { connect } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nimport { createGame, fetchGames } from '../../actions/Game'\n\nimport './styles.scss'\n\nexport const Home = ({ games, createGame, fetchGames }) => {\n  let history = useHistory();\n  const [newName, setNewName] = useState('')\n\n  useEffect(() => {\n    fetchGames()\n  }, [fetchGames])\n\n  const handleCreateGame = () => {\n    createGame(newName, () =>\n      history.push(`/game/${newName}`)\n    )\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"col-5 col-sm-4\" />\n      <div className=\"col-2 col-sm-4 new-game padded-v--lg\">\n        <div>\n          Maak een nieuwe game\n          <input\n            type=\"text\"\n            value={newName}\n            onChange={e => setNewName(e.target.value)}\n          />\n          <div\n            className=\"button margin-top block\"\n            onClick={handleCreateGame}\n          >\n            Start\n          </div>\n        </div>\n        <br /><br />\n        <br /><br />\n        <div className=\"existing-game\">\n          Join een bestaande game\n          <hr style={{ color: 'white', width: 'calc(100% - 6px)'}} />\n          <div>\n            {\n              games && games.length > 0 && Array.isArray(games)\n                ? games.map((game, i) =>\n                    <Link\n                      key={i}\n                      className=\"block\"\n                      to={`/game/${game.name}`}\n                    >\n                      {game.name}\n                    </Link>\n                  )\n                : 'Er zijn nog geen bestaande games'\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction mapStateToProps({ game }) {\n  return {\n    games: game.games\n  };\n}\n\nexport default connect(\n  mapStateToProps, {\n    createGame,\n    fetchGames\n  }\n)(Home)\n","import React from 'react'\nimport { connect } from \"react-redux\";\n\nimport { fetchGame } from '../../actions/Game'\n\nimport './styles.scss'\n\nexport const Player = ({ isCurrentPlayer, name, score }) => {\n  return (\n    <div className=\"player\">\n      <div>\n        {name}\n        <span className={`player__current ${isCurrentPlayer ? 'player__current--active' : ''}`} />\n      </div>\n      {score}\n    </div>\n  )\n}\n\nfunction mapStateToProps({ game }) {\n  return {\n    game: game.game\n  };\n}\n\nexport default connect(mapStateToProps, {\n    fetchGame\n  })\n(Player);\n","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withRouter } from \"react-router-dom\";\nimport io from \"socket.io-client\";\n\nimport Player from '../Player'\nimport Calculator from '../../components/Calculator'\n\nimport { fetchGame, updateGameSocket, resetGame, updateGame } from '../../actions/Game'\n\nimport './styles.scss'\n\nlet socket\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props)\n    socket = io.connect(\"http://localhost:8080\");\n\n    socket.on(\"gameUpdated\", res => {\n      this.props.updateGame(res)\n    });\n  }\n\n  componentDidMount() {\n    const name = this.props.match.params.name\n    if (name) this.props.fetchGame(name)\n  }\n\n  componentWillUnmount() {\n    socket.disconnect()\n    alert(\"Disconnecting Socket as component will unmount\")\n  }\n\n  handleScoreUpdate = (score) => {\n    const { game } = this.props\n    let current = game.currentPlayer\n    const currentPlayer = game.players[current]\n    if (!currentPlayer) return\n    const newScore = currentPlayer.score - score\n    if (newScore < 0) return\n    if (newScore === 0) this.finishGame()\n    game.players[current].score = newScore\n    if (current === 1) {\n      current = 0\n    } else {\n      current = 1\n    }\n    game.currentPlayer = current\n    this.props.updateGameSocket(socket, game)\n  }\n\n  finishGame = () => {\n    alert('doner')\n  }\n\n  render() {\n    const { game } = this.props\n\n    return (\n      <div className=\"container\">\n        <div className=\"col-5 col-sm-4\" />\n        <div className=\"col-2 col-sm-4 new-game padded-v--lg\">\n          {game ? game.name : 'No game found'}\n          <div className=\"game-container container\">\n            {\n              game\n                ?\n                  game.players.map((player, i) =>\n                    <div key={i} className={`col-${12 / game.players.length}`}>\n                      <Player\n                        name={player.name}\n                        isCurrentPlayer={game.currentPlayer === i}\n                        score={player.score}\n                      />\n                    </div>\n                  )\n                : null\n            }\n            <hr className=\"col-12\" style={{ color: 'white', width: 'calc(100% - 6px)'}} />\n            <div className=\"col-12\">\n              <Calculator setScore={(score) => this.handleScoreUpdate(score)} />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nfunction mapStateToProps({ game }) {\n  return {\n    game: game.game\n  };\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {\n    fetchGame,\n    updateGameSocket,\n    resetGame,\n    updateGame\n  })\n)(Home);\n","import React, { useState } from 'react'\n\nimport './styles.scss'\n\nconst Calculator = ({ setScore }) => {\n  const [number, setNumber] = useState(0)\n\n  const addNumber = (score) => {\n    const newNumber = `${number}${score}`\n    const numberInteger = parseInt(newNumber, 10)\n    if (numberInteger > 180) return\n    setNumber(numberInteger)\n  }\n\n  const removeNumber = () => {\n    const numberString = number.toString()\n    const lastRemoved = numberString.slice(0, -1)\n    const parsedBack = parseInt(lastRemoved, 10)\n    if (parsedBack && parsedBack >= 0) {\n      setNumber(parsedBack)\n    } else {\n      setNumber(0)\n    }\n  }\n\n  return (\n    <>\n      <div className=\"number-container\">\n        {number}\n        <span\n          className=\"number-container__close\"\n          onClick={removeNumber}\n        >\n          ×\n        </span>\n      </div>\n      <div className=\"calculator\">\n        {\n          [...new Array(10)].map((user, i) =>\n            <div\n              key={`button-${i}`}\n              className=\"calculator__key\"\n              onClick={() => addNumber(9 - i)}\n            >\n              {9 - i}\n            </div>\n          )\n        }\n      </div>\n      <div\n        className={`button block`}\n        onClick={() => {setScore(number); setNumber(0)}}\n      >\n        {number > 0 ? 'Set score' : 'No score'}\n      </div>\n    </>\n  )\n}\n\nexport default Calculator\n","import React from 'react'\nimport './styles.scss'\n\nconst Title = () => (\n  <div className=\"title\">SNOEIEN DARTS</div>\n)\n\nexport default Title\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { Provider } from 'react-redux'\n\nimport { store } from './store'\nimport Home from './containers/Home';\nimport Game from './containers/Game';\nimport Title from './components/Title';\n\nimport './App.scss';\nimport './theme/master.scss';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <Title />\n        </header>\n        <Provider store={store}>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/game/:name\">\n                <Game />\n              </Route>\n            </Switch>\n          </Router>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport io from 'socket.io-client';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst socket = io();\n// sockets test\nsocket.on('hello', ({ message }) => alert(message));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}